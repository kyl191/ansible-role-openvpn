---
- name: Include vars for OpenVPN installation
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "../vars/os/{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml"
    - "../vars/os/{{ ansible_distribution }}.yml"
    - "../vars/os/{{ ansible_os_family }}.yml"
    - "../vars/empty.yml"

- name: Uninstall OpenVPN
  ansible.builtin.import_tasks: uninstall.yml
  when: openvpn_uninstall is truthy

- name: Install OpenVPN
  ansible.builtin.import_tasks: install.yml
  tags:
    - install

- name: Copy or Generate server keys
  ansible.builtin.import_tasks: server_keys.yml

- name: Enable ipv4 forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
  when: openvpn_ci_build is falsy

- name: Enable ipv6 forwarding
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
  when: openvpn_server_ipv6_network is defined and openvpn_ci_build is falsy

- name: Detect firewall type
  ansible.builtin.import_tasks: firewall/firewall.yml
  when:
    - openvpn_ci_build is falsy
    - openvpn_manage_firewall_rules
  tags:
    - firewall

- name: Configure SELinux
  ansible.builtin.import_tasks: selinux.yml
  when:
    - ansible_selinux.status == "enabled"

- name: Compare existing certs against 'clients' variable
  ansible.builtin.import_tasks: cert_sync_detection.yml
  when: openvpn_sync_certs is truthy
  tags:
    - sync_certs

- name: Generate client configs
  ansible.builtin.import_tasks: client_keys.yml
  when: openvpn_clients is defined
  tags:
    - openvpn_generate_clients

- name: Generate revocation list and clean up
  ansible.builtin.import_tasks: revocation.yml
  when: >-
    openvpn_use_crl is truthy
    and
    (
      (openvpn_revoke_these_certs is defined)
      or
      (openvpn_sync_certs is truthy and cert_sync_certs_to_revoke.stdout_lines | length > 0)
    )

- name: Configure OpenVPN server
  ansible.builtin.import_tasks: config.yml
